---
import Layout from '../../layouts/Layout.astro';
import PropertyCard from '../../components/property/PropertyCard.astro';
import { properties } from '../../data/properties';

// Get search parameters
const { location, type, maxPrice } = Astro.url.searchParams;

// Filter properties based on search parameters
let filteredProperties = properties;

if (location) {
  filteredProperties = filteredProperties.filter(property => 
    property.address.toLowerCase().includes(location.toLowerCase())
  );
}

if (type) {
  filteredProperties = filteredProperties.filter(property => 
    property.type.toLowerCase() === type.toLowerCase()
  );
}

if (maxPrice) {
  filteredProperties = filteredProperties.filter(property => 
    property.price <= parseInt(maxPrice)
  );
}
---

<Layout title="Properties">
  <section class="pt-32 pb-20">
    <div class="container mx-auto px-4 md:px-6">
      <div class="max-w-3xl mx-auto text-center mb-12" data-aos="fade-up">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">Explore Our Properties</h1>
        <p class="text-neutral-600 text-lg">Find your perfect home from our curated selection of premium properties</p>
      </div>
      
      <!-- Filters -->
      <div class="mb-12 bg-white rounded-lg shadow-md p-6" data-aos="fade-up">
        <form id="filter-form" class="grid grid-cols-1 md:grid-cols-4 gap-6">
          <div>
            <label for="location" class="block text-sm font-medium text-neutral-700 mb-1">Location</label>
            <select id="location" name="location" class="w-full p-3 border border-neutral-300 rounded-md">
              <option value="">Any Location</option>
              <option value="los-angeles">Los Angeles, CA</option>
              <option value="new-york">New York, NY</option>
              <option value="seattle">Seattle, WA</option>
              <option value="aspen">Aspen, CO</option>
              <option value="miami">Miami, FL</option>
            </select>
          </div>
          
          <div>
            <label for="property-type" class="block text-sm font-medium text-neutral-700 mb-1">Property Type</label>
            <select id="property-type" name="type" class="w-full p-3 border border-neutral-300 rounded-md">
              <option value="">Any Type</option>
              <option value="apartment">Apartment</option>
              <option value="house">House</option>
              <option value="condo">Condo</option>
              <option value="villa">Villa</option>
              <option value="penthouse">Penthouse</option>
              <option value="estate">Estate</option>
            </select>
          </div>
          
          <div>
            <label for="bedrooms" class="block text-sm font-medium text-neutral-700 mb-1">Bedrooms</label>
            <select id="bedrooms" name="bedrooms" class="w-full p-3 border border-neutral-300 rounded-md">
              <option value="">Any</option>
              <option value="1">1+</option>
              <option value="2">2+</option>
              <option value="3">3+</option>
              <option value="4">4+</option>
              <option value="5">5+</option>
            </select>
          </div>
          
          <div>
            <label for="price" class="block text-sm font-medium text-neutral-700 mb-1">Max Price</label>
            <select id="price" name="maxPrice" class="w-full p-3 border border-neutral-300 rounded-md">
              <option value="">Any Price</option>
              <option value="1000000">$1,000,000</option>
              <option value="2000000">$2,000,000</option>
              <option value="3000000">$3,000,000</option>
              <option value="5000000">$5,000,000</option>
              <option value="10000000">$10,000,000+</option>
            </select>
          </div>
          
          <div class="md:col-span-full">
            <button type="submit" class="w-full bg-primary-600 hover:bg-primary-700 text-white py-3 px-6 rounded-md font-medium transition-colors">
              Search Properties
            </button>
          </div>
        </form>
      </div>
      
      <!-- Property Listings -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {filteredProperties.map((property, index) => (
          <div data-aos="fade-up" data-aos-delay={100 * (index % 3)}>
            <PropertyCard property={property} />
          </div>
        ))}
      </div>
      
      <!-- No Results Message -->
      {filteredProperties.length === 0 && (
        <div class="text-center py-12">
          <h3 class="text-2xl font-bold text-neutral-700 mb-4">No properties found</h3>
          <p class="text-neutral-600">Try adjusting your search criteria to find more properties.</p>
        </div>
      )}
      
      <!-- Pagination placeholder -->
      {filteredProperties.length > 0 && (
        <div class="mt-12 flex justify-center" data-aos="fade-up">
          <nav class="inline-flex rounded-md shadow-sm" aria-label="Pagination">
            <a href="#" class="relative inline-flex items-center px-4 py-2 rounded-l-md border border-neutral-300 bg-white text-sm font-medium text-neutral-500 hover:bg-neutral-50">
              Previous
            </a>
            
            <a href="#" class="relative inline-flex items-center px-4 py-2 border border-neutral-300 bg-white text-sm font-medium text-neutral-500 hover:bg-neutral-50">
              1
            </a>
            
            <a href="#" class="relative inline-flex items-center px-4 py-2 border border-neutral-300 bg-primary-50 text-sm font-medium text-primary-600">
              2
            </a>
            
            <a href="#" class="relative inline-flex items-center px-4 py-2 border border-neutral-300 bg-white text-sm font-medium text-neutral-500 hover:bg-neutral-50">
              3
            </a>
            
            <a href="#" class="relative inline-flex items-center px-4 py-2 rounded-r-md border border-neutral-300 bg-white text-sm font-medium text-neutral-500 hover:bg-neutral-50">
              Next
            </a>
          </nav>
        </div>
      )}
    </div>
  </section>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterForm = document.getElementById('filter-form');
    const urlParams = new URLSearchParams(window.location.search);
    
    // Set initial form values from URL parameters
    document.getElementById('location').value = urlParams.get('location') || '';
    document.getElementById('property-type').value = urlParams.get('type') || '';
    document.getElementById('price').value = urlParams.get('maxPrice') || '';
    
    filterForm.addEventListener('submit', (e) => {
      e.preventDefault();
      
      const formData = new FormData(filterForm);
      const params = new URLSearchParams();
      
      for (const [key, value] of formData.entries()) {
        if (value) params.append(key, value);
      }
      
      window.location.href = `/properties?${params.toString()}`;
    });
  });
</script>